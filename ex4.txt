Abstract base classes are a form of interface checking more
strict than individual :func:`hasattr()` checks for particular
methods.  By defining an abstract base class, a common API
can be established for a set of subclasses.  This capability
is especially useful in situations where someone less familiar
with the source for an application is

To start, define an abstract base class to represent the API
of a set of plug-ins for saving and loading data.  Set the
metaclass for the new base class to :class:`ABCMeta`, and use
decorators to establish the public API for the class.  The
following examples use ``abc_base.py``, which contains:
